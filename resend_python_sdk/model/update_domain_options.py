# coding: utf-8

"""
    Resend

    Resend is the email platform for developers.

    The version of the OpenAPI document: 1.1.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from resend_python_sdk import schemas  # noqa: F401


class UpdateDomainOptions(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            click_tracking = schemas.BoolSchema
            open_tracking = schemas.BoolSchema
            __annotations__ = {
                "click_tracking": click_tracking,
                "open_tracking": open_tracking,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["click_tracking"]) -> MetaOapg.properties.click_tracking: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["open_tracking"]) -> MetaOapg.properties.open_tracking: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["click_tracking", "open_tracking", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["click_tracking"]) -> typing.Union[MetaOapg.properties.click_tracking, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["open_tracking"]) -> typing.Union[MetaOapg.properties.open_tracking, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["click_tracking", "open_tracking", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        click_tracking: typing.Union[MetaOapg.properties.click_tracking, bool, schemas.Unset] = schemas.unset,
        open_tracking: typing.Union[MetaOapg.properties.open_tracking, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'UpdateDomainOptions':
        return super().__new__(
            cls,
            *args,
            click_tracking=click_tracking,
            open_tracking=open_tracking,
            _configuration=_configuration,
            **kwargs,
        )
